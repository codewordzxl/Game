C51 COMPILER V9.01   OLED                                                                  11/27/2020 00:05:50 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN oled.OBJ
COMPILER INVOKED BY: D:\KEIL4 C51\C51\BIN\C51.EXE oled.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"oled.h"
   2          #include"oledfont.h"
   3          
   4          
   5          /*********************OLED驱动程序用的延时程序************************************/
   6          void delay(unsigned int z)
   7          {
   8   1              unsigned int x,y;
   9   1              for(x=z;x>0;x--)
  10   1                      for(y=110;y>0;y--);
  11   1      }
  12          
  13          /**********************************************
  14          //IIC Start
  15          **********************************************/
  16          void IIC_Start()
  17          {
  18   1         SCL = high;          
  19   1         SDA = high;
  20   1         SDA = low;
  21   1         SCL = low;
  22   1      }
  23          
  24          /**********************************************
  25          //IIC Stop
  26          **********************************************/
  27          void IIC_Stop()
  28          {
  29   1         SCL = low;
  30   1         SDA = low;
  31   1         SCL = high;
  32   1         SDA = high;
  33   1      }
  34          
  35          /**********************************************
  36          // 通过I2C总线写一个字节
  37          **********************************************/
  38          void Write_IIC_Byte(unsigned char IIC_Byte)
  39          {
  40   1              unsigned char i;
  41   1              for(i=0;i<8;i++)
  42   1              {
  43   2                      if(IIC_Byte & 0x80)
  44   2                              SDA=high;
  45   2                      else
  46   2                              SDA=low;
  47   2                      SCL=high;
  48   2                      SCL=low;
  49   2                      IIC_Byte<<=1;
  50   2              }
  51   1              SDA=1;
  52   1              SCL=1;
  53   1              SCL=0;
  54   1      }
  55          
C51 COMPILER V9.01   OLED                                                                  11/27/2020 00:05:50 PAGE 2   

  56          /*********************OLED写数据************************************/ 
  57          void OLED_WrDat(unsigned char IIC_Data)
  58          {
  59   1              IIC_Start();
  60   1              Write_IIC_Byte(0x78);
  61   1              Write_IIC_Byte(0x40);                   //write data
  62   1              Write_IIC_Byte(IIC_Data);
  63   1              IIC_Stop();
  64   1      }
  65          /*********************OLED写命令************************************/
  66          void OLED_WrCmd(unsigned char IIC_Command)
  67          {
  68   1              IIC_Start();
  69   1              Write_IIC_Byte(0x78);            //Slave address,SA0=0
  70   1              Write_IIC_Byte(0x00);                   //write command
  71   1              Write_IIC_Byte(IIC_Command);
  72   1              IIC_Stop();
  73   1      }
  74          /*********************OLED 设置坐标************************************/
  75          void OLED_Set_Pos(unsigned char x, unsigned char y) 
  76          { 
  77   1              OLED_WrCmd(0xb0+y);
  78   1              OLED_WrCmd(((x&0xf0)>>4)|0x10);
  79   1              OLED_WrCmd((x&0x0f)|0x01);
  80   1      } 
  81          
  82          /*********************OLED复位************************************/
  83          void OLED_CLS(void)
  84          {
  85   1              unsigned char y,x;
  86   1              for(y=0;y<8;y++)
  87   1              {
  88   2                      OLED_WrCmd(0xb0+y);
  89   2                      //OLED_WrCmd(0x01);
  90   2                      OLED_WrCmd(0x00);
  91   2                      OLED_WrCmd(0x10);
  92   2                      for(x=0;x<X_WIDTH;x++)
  93   2                      OLED_WrDat(0);
  94   2              }
  95   1      }
  96          /*********************OLED初始化************************************/
  97          void OLED_Init(void)
  98          {
  99   1              delay(500);
 100   1              OLED_WrCmd(0xae);
 101   1              OLED_WrCmd(0x00);
 102   1              OLED_WrCmd(0x10);
 103   1              OLED_WrCmd(0x41);
 104   1              OLED_WrCmd(0xb0);
 105   1              OLED_WrCmd(0x81);
 106   1              OLED_WrCmd(0xff);
 107   1              OLED_WrCmd(0xa1);
 108   1              OLED_WrCmd(0xa6);
 109   1      
 110   1              OLED_WrCmd(0xa8);
 111   1              OLED_WrCmd(0x3f);          
 112   1              OLED_WrCmd(0xd3);
 113   1              OLED_WrCmd(0x00);
 114   1              OLED_WrCmd(0xc8);
 115   1              OLED_WrCmd(0xd5);
 116   1              OLED_WrCmd(0x80);
 117   1              OLED_WrCmd(0xd8);
C51 COMPILER V9.01   OLED                                                                  11/27/2020 00:05:50 PAGE 3   

 118   1              OLED_WrCmd(0x05);
 119   1      
 120   1              OLED_WrCmd(0xd9);
 121   1              OLED_WrCmd(0xf1);
 122   1              OLED_WrCmd(0xda);
 123   1              OLED_WrCmd(0x12);
 124   1              OLED_WrCmd(0xdb);
 125   1              OLED_WrCmd(0x30);
 126   1              OLED_WrCmd(0x8d);
 127   1              OLED_WrCmd(0x14);
 128   1              OLED_WrCmd(0xaf);
 129   1              OLED_CLS();
 130   1      } 
 131          void OLED_P8x16_Mie(unsigned char x, y)
 132          {
 133   1              unsigned char i=0;
 134   1              if(x>120){x=0;y++;}
 135   1              OLED_Set_Pos(x,y);
 136   1              for(i=0;i<8;i++)
 137   1              OLED_WrDat(Mie[i]);
 138   1              OLED_Set_Pos(x,y+1);
 139   1              for(i=0;i<8;i++)
 140   1              OLED_WrDat(Mie[i+8]);
 141   1      }
 142          
 143          /*******************功能描述：显示8*16一组标准ASCII字符串        显示的坐标（x,y），y为页范围0～7***************
             -*/
 144          void OLED_P8x16Str(unsigned char x, y,unsigned char ch[])
 145          {
 146   1              unsigned char c=0,i=0,j=0;
 147   1              while (ch[j]!='\0')
 148   1              {
 149   2                      c =ch[j]-32;
 150   2                      if(x>120){x=0;y+=2;}
 151   2                      OLED_Set_Pos(x,y);
 152   2                      for(i=0;i<8;i++)
 153   2                      OLED_WrDat(F8X16[c*16+i]);
 154   2                      OLED_Set_Pos(x,y+1);
 155   2                      for(i=0;i<8;i++)
 156   2                      OLED_WrDat(F8X16[c*16+i+8]);
 157   2                      x+=8;
 158   2                      j++;
 159   2              }
 160   1      }
 161          
 162          /*********************OLED全屏************************************/
 163          //void OLED_Fill(unsigned char bmp_dat) 
 164          //{
 165          //      unsigned char y,x;
 166          //      for(y=0;y<8;y++)
 167          //      {
 168          //              OLED_WrCmd(0xb0+y);
 169          //              OLED_WrCmd(0x01);
 170          //              OLED_WrCmd(0x10);
 171          //              for(x=0;x<X_WIDTH;x++)
 172          //              OLED_WrDat(bmp_dat);
 173          //      }
 174          //}
 175          
 176          
 177          /*****************功能描述：显示16*16点阵  显示的坐标（x,y），y为页范围0～7****************************/
 178          void OLED_P16x16Ch(unsigned char x, y, N)
C51 COMPILER V9.01   OLED                                                                  11/27/2020 00:05:50 PAGE 4   

 179          {
 180   1              unsigned char wm=0;
 181   1              unsigned int adder=32*N;
 182   1              OLED_Set_Pos(x , y);
 183   1              for(wm = 0;wm < 16;wm++)
 184   1              {
 185   2                      OLED_WrDat(F16x16[adder]);
 186   2                      adder += 1;
 187   2              }
 188   1              OLED_Set_Pos(x,y + 1);
 189   1              for(wm = 0;wm < 16;wm++)
 190   1              {
 191   2                      OLED_WrDat(F16x16[adder]);
 192   2                      adder += 1;
 193   2              }               
 194   1      }
 195                                                                                                                    
             -                                                                                                                        
             -                                                                                                                        
             -                                                                                                                        
             -                                                                                                                        
             -                                                                                                                        
             -                                                                                                                        
             -                                                                                                                        
             -                                                                                                                        
             -                                                                                                                        
             -                                                                                                                        
             -                                                                                                                        
             -                                                                                                                        
             -                                                                                                                        
             -                                                                                                                        
             -                                                                                                                        
             -                                                                                                                        
             -                     
 196          
 197          
 198          
 199          
 200          
 201          
 202          
 203          
 204          
 205          
 206          
 207          
 208          
 209          
 210          
 211          
 212          
 213          
 214           
 215                                                                                                                    
             -                                                                                                                        
             -                                                                                                                        
             -                                                             
 216          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 217          void Draw_BMP(unsigned char x0, y0,x1, y1,unsigned char BMP[])
 218          {
 219   1              unsigned int j=0;
C51 COMPILER V9.01   OLED                                                                  11/27/2020 00:05:50 PAGE 5   

 220   1              unsigned char x,y;
 221   1      
 222   1        if(y1%8==0) y=y1/8;      
 223   1        else y=y1/8+1;
 224   1              for(y=y0;y<y1;y++)
 225   1              {
 226   2                      OLED_Set_Pos(x0,y);
 227   2          for(x=x0;x<x1;x++)
 228   2                  {      
 229   3                      OLED_WrDat(BMP[j++]);
 230   3                  }
 231   2              }
 232   1      }
 233          
 234          void Pate1()
 235          {
 236   1              OLED_CLS();
 237   1              OLED_P16x16Ch(0,1,12);
 238   1              OLED_P16x16Ch(16,1,13);
 239   1              OLED_P16x16Ch(31,1,14);
 240   1              OLED_P16x16Ch(47,1,15);
 241   1              OLED_P16x16Ch(63,1,16);
 242   1              OLED_P16x16Ch(79,1,17);
 243   1      
 244   1              OLED_P16x16Ch(16,3,5);
 245   1              OLED_P16x16Ch(31,3,6);
 246   1              OLED_P16x16Ch(47,3,7);
 247   1      
 248   1              OLED_P16x16Ch(16,5,33);
 249   1              OLED_P16x16Ch(31,5,34);
 250   1              OLED_P16x16Ch(47,5,35);
 251   1      
 252   1              
 253   1      }
 254          
 255          void Pate2()
 256          {
 257   1              OLED_CLS();
 258   1      
 259   1              OLED_P16x16Ch(16,1,0);
 260   1              OLED_P16x16Ch(31,1,1);
 261   1              OLED_P16x16Ch(47,1,2);
 262   1              OLED_P16x16Ch(63,1,3);
 263   1              OLED_P16x16Ch(79,1,4);
 264   1      
 265   1              OLED_P16x16Ch(0,3,12);
 266   1              OLED_P16x16Ch(16,3,18);
 267   1              OLED_P16x16Ch(31,3,19);
 268   1              OLED_P16x16Ch(47,3,20);
 269   1      
 270   1              OLED_P16x16Ch(16,5,33);
 271   1              OLED_P16x16Ch(31,5,34);
 272   1              OLED_P16x16Ch(47,5,35);
 273   1      }
 274          
 275          void Pate3()
 276          {
 277   1              OLED_CLS();
 278   1      
 279   1              OLED_P16x16Ch(16,1,0);
 280   1              OLED_P16x16Ch(31,1,1);
 281   1              OLED_P16x16Ch(47,1,2);
C51 COMPILER V9.01   OLED                                                                  11/27/2020 00:05:50 PAGE 6   

 282   1              OLED_P16x16Ch(63,1,3);
 283   1              OLED_P16x16Ch(79,1,4);
 284   1      
 285   1              OLED_P16x16Ch(16,3,5);
 286   1              OLED_P16x16Ch(31,3,6);
 287   1              OLED_P16x16Ch(47,3,7);
 288   1      
 289   1      
 290   1              OLED_P16x16Ch(0,5,12);
 291   1              OLED_P16x16Ch(16,5,36);
 292   1              OLED_P16x16Ch(31,5,37);
 293   1              OLED_P16x16Ch(47,5,38);
 294   1      }
 295          
 296          
 297          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1361    ----
   CONSTANT SIZE    =   3336    ----
   XDATA SIZE       =   ----      26
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
